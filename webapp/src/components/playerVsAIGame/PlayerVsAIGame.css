/* Import global styles - Ensure path is correct */
@import url("../../assets/global.css");

/* --- Base Game Container --- */
.gameContainer.player-vs-ai {
    display: flex;
    flex-direction: column;
    height: 100vh; /* Use viewport height to fill screen */
    width: 100%;
    overflow: hidden;
    /* REMOVED background-color: var(--color-fondo, #f4f4f4); */
    /* Let the global style (e.g., on body) apply the background */
}

.loading-div {
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    font-size: 1.5rem;
    color: var(--color-primario);
    /* Ensure loading div also doesn't set conflicting background */
    background-color: transparent;
}

/* --- Main Content Area --- */
main {
    flex: 1;
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 100%;
    overflow: hidden;
    padding: 1rem 0;
    margin: 0;
    box-sizing: border-box;
}

/* --- 3-Column Layout --- */
.game-layout {
    display: flex;
    width: 100%;
    max-width: 1400px;
    height: 100%;
    overflow: hidden;
    padding: 0 1rem;
    box-sizing: border-box;
    gap: 1.5rem;
}

/* Apply specificity using the parent class .player-vs-ai */
.player-vs-ai .left-column {
    width: 22%;
    min-width: 200px;
    padding: 0.5rem 0;
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: center; /* Center items horizontally */
    gap: 1.5rem;
    justify-content: flex-start; /* Align items to top */
}

.player-vs-ai .center-column {
    width: 56%;
    padding: 0.5rem;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: flex-start; /* Align content to top */
    gap: 1rem;
    overflow: visible; /* Avoid unnecessary scroll */
    height: 100%;
}

.player-vs-ai .right-column {
    width: 22%;
    min-width: 180px;
    padding: 0.5rem 0;
    display: flex;
    flex-direction: column;
    align-items: center; /* Center items horizontally */
    justify-content: flex-start; /* Align content (button section) to top */
    height: 100%;
}

/* --- Combined Scoreboard (Left Column) --- */
/* Added specificity */
.player-vs-ai .combined-scoreboard-left {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    gap: 0.3rem;
    background-color: var(--color-fondo-marcador, rgba(255, 255, 255, 0.8));
    padding: 0.75rem 1rem;
    border-radius: var(--border-radius-md, 8px);
    box-shadow: var(--shadow-sm);
    border: 1px solid var(--color-borde-marcador, rgba(0, 0, 0, 0.1));
    width: 100%;
    max-width: 280px;
    box-sizing: border-box;
}

/* Added specificity */
.player-vs-ai .scoreboard-line {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    width: 100%;
}
.player-vs-ai .scoreboard-line.separator { justify-content: center; font-weight: bold; color: var(--color-texto-secundario, #aaa); margin: 0.1rem 0; font-size: 1.1rem; }
.player-vs-ai .scoreboard-line span { font-size: 1rem; font-weight: 500; color: var(--color-texto-primario, #333); }
.player-vs-ai .scoreboard-line .ai-name { font-weight: bold; color: var(--color-ai, #e74c3c); flex-shrink: 0; }
.player-vs-ai .scoreboard-line .player-name { font-weight: bold; color: var(--color-jugador, #3498db); overflow: hidden; text-overflow: ellipsis; white-space: nowrap; flex-grow: 1; min-width: 50px; }
.player-vs-ai .scoreboard-line .score { font-weight: bold; font-size: 1.1rem; margin-left: auto; padding-left: 0.5rem; flex-shrink: 0; }

/* Answer Indicator (Used in scoreboard) - Added specificity */
.player-vs-ai .answer-indicator {
    padding: 0.15rem 0.4rem;
    border-radius: 4px;
    font-weight: bold;
    font-size: 0.85rem;
    line-height: 1;
    margin-left: 0.3rem;
    min-width: 18px;
    text-align: center;
    flex-shrink: 0;
}
.player-vs-ai .answer-indicator.correct { background-color: var(--color-correcto-fondo, #2ecc71); color: white; }
.player-vs-ai .answer-indicator.incorrect { background-color: var(--color-incorrecto-fondo, #e74c3c); color: white; }


/* --- AI Character --- */
/* Added specificity */
.player-vs-ai .ai-character-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 0;
    width: 100%;
}

.player-vs-ai .ai-robot {
    position: relative;
    width: 100%;
    display: flex;
    justify-content: center;
    margin-bottom: 1rem;
}

.player-vs-ai .robot-image {
    width: 140px;
    height: 140px;
    object-fit: contain;
    content: url("../../assets/img/FriendlyRobotThinking.png"); /* Check path */
}

.player-vs-ai .ai-speech-bubble,
.player-vs-ai .ai-thinking-bubble {
    position: absolute;
    top: -15px;
    right: -5px;
    background: white;
    border: 2px solid var(--color-primario);
    border-radius: 15px;
    padding: 10px 12px;
    max-width: 180px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    z-index: 10;
    font-size: 0.9rem;
    white-space: normal;
}
/* Bubble arrows */
.player-vs-ai .ai-speech-bubble:after, .player-vs-ai .ai-thinking-bubble:after { content: ""; position: absolute; bottom: -10px; left: 20px; border-width: 10px 10px 0; border-style: solid; border-color: white transparent; display: block; width: 0; }
.player-vs-ai .ai-speech-bubble:before, .player-vs-ai .ai-thinking-bubble:before { content: ""; position: absolute; bottom: -12px; left: 19px; border-width: 11px 11px 0; border-style: solid; border-color: var(--color-primario) transparent; display: block; width: 0; z-index: -1; }

/* Thinking dots animation */
.player-vs-ai .thinking-dots { overflow: hidden; display: inline-block; vertical-align: bottom; width: 20px; animation: thinking 1.5s infinite steps(3, end); }
@keyframes thinking { 0% { clip-path: inset(0 100% 0 0); } 33% { clip-path: inset(0 66% 0 0); } 66% { clip-path: inset(0 33% 0 0); } 100% { clip-path: inset(0 0 0 0); } }
.player-vs-ai .ai-thinking-bubble span:first-child::after { content: '...'; position: absolute; left: 0; top: 0; opacity: 0; }


/* --- Center Column Content --- */
/* Added specificity */
.player-vs-ai .question-section {
    width: 100%;
    text-align: center;
    margin-bottom: 0.5rem;
    background-color: var(--color-fondo-pregunta, #fff);
    padding: 1rem 1.5rem;
    border-radius: var(--border-radius-lg, 12px);
    box-shadow: var(--shadow-md);
    box-sizing: border-box;
}

.player-vs-ai .questionNumber { display: flex; justify-content: space-between; align-items: center; gap: 1em; margin-bottom: 0.75rem; width: 100%; }
.player-vs-ai .questionNumber h2 { font-style: normal; font-size: var(--font-size-md); margin: 0; color: var(--color-texto-secundario); }

.player-vs-ai .question-section h1 { font-size: calc(var(--font-size-xl) * 0.9); margin-bottom: 0.75rem; overflow-y: auto; max-height: 5em; line-height: 1.3; color: var(--color-texto-primario); }

.player-vs-ai .next-arrow-button { background-color: var(--color-primario); color: white; border-radius: 50%; padding: 0.4em; cursor: pointer; transition: background-color 0.3s ease, transform 0.2s ease; border: none; display: flex; align-items: center; justify-content: center; }
.player-vs-ai .next-arrow-button:hover { background-color: var(--color-hover-boton); transform: scale(1.1); }

.player-vs-ai .question-image { width: 100%; display: flex; justify-content: center; align-items: center; margin-bottom: 1rem; max-height: 30vh; min-height: 150px; overflow: hidden; border-radius: var(--border-radius-md); }
.player-vs-ai .question-image img { object-fit: contain; max-width: 100%; max-height: 100%; display: block; }

/* Answer Panel - Forcing 2x2 grid */
.player-vs-ai .answerPanel {
    display: grid;
    grid-template-columns: 1fr 1fr; /* Force 2 columns */
    gap: 0.75em;
    width: 100%;
    margin-bottom: 0.5rem;
    box-sizing: border-box;
}
.player-vs-ai .answerPanel button { width: 100%; padding: 0.75rem 1rem; height: auto; min-height: 50px; white-space: normal; line-height: 1.3; display: flex; justify-content: center; align-items: center; text-align: center; font-size: 1rem; box-sizing: border-box; }

.player-vs-ai .timer-section { width: 100%; margin-top: 1rem; padding: 0.5rem 1rem; background-color: var(--color-fondo-timer, #fff); border-radius: var(--border-radius-md); box-shadow: var(--shadow-sm); box-sizing: border-box; }
.player-vs-ai #progressBar { height: 0.75em; background-color: lightgray; border-radius: 5px; }
.player-vs-ai #progressBar .MuiLinearProgress-bar { background-color: var(--color-primario); transition: transform .4s linear; }
.player-vs-ai .timer-section span { color: var(--color-primario); font-weight: bold; font-size: 0.9rem; }

/* --- Right Column Content --- */
/* Added specificity */
.player-vs-ai .rules-points-section {
    align-items: center; /* Center button horizontally */
    display: flex;
    flex-direction: column;
    gap: 1rem;
    width: 100%; /* Takes width of parent column */
    max-width: 200px; /* But limit max width */
    margin-top: 0; /* Align to top */
    margin-bottom: auto;
    box-sizing: border-box;
}
/* Ensure BaseButton takes the width */
.player-vs-ai .rules-points-section .buttonSecondary { width: 100%; }

/* --- Dialogs --- */
/* Dialog styles are likely global, specificity might not be needed unless overridden */
.overlay { position: fixed; top: 0; left: 0; width: 100vw; height: 100vh; background-color: rgba(0, 0, 0, 0.6); display: flex; justify-content: center; align-items: center; z-index: 1000; backdrop-filter: blur(3px); }
main.blurred { filter: blur(5px); pointer-events: none; } /* Applies blur to main when overlay is active */
.dialogGameRulesContainer { width: 90%; max-width: 500px; background-color: white; border-radius: var(--border-radius-lg); box-shadow: var(--shadow-lg); }
.summaryContent { text-align: center; padding: 1rem 0; }
.summaryContent h3 { margin-bottom: 1rem; font-size: 1.5rem; }
.summaryContent p { margin: 0.5rem 0; font-size: 1.1rem; }

/* --- Responsive Adjustments --- */
/* Apply specificity for responsive rules as well */
@media (max-width: 1000px) {
    .player-vs-ai .game-layout { flex-direction: column; height: auto; overflow-y: auto; padding: 0 0.5rem; gap: 1rem; }
    .player-vs-ai .left-column, .player-vs-ai .center-column, .player-vs-ai .right-column { width: 100%; height: auto; padding: 0.5rem; overflow: visible; min-width: unset; }
    .player-vs-ai .left-column { order: 1; flex-direction: row; justify-content: space-around; align-items: center; }
    .player-vs-ai .combined-scoreboard-left { width: auto; max-width: none; }
    .player-vs-ai .ai-character-container { padding: 0; width: auto; }
    .player-vs-ai .center-column { order: 2; justify-content: flex-start; }
    .player-vs-ai .right-column { order: 3; justify-content: center; padding-bottom: 1rem; }
    .player-vs-ai .rules-points-section { margin-top: 1rem; margin-bottom: 0; }
    .player-vs-ai .question-image { max-height: 25vh; }
    .player-vs-ai .answerPanel { grid-template-columns: 1fr 1fr; } /* Keep 2 columns if possible */
}

@media (max-width: 768px) {
    .player-vs-ai .left-column { flex-direction: column; align-items: center; }
    .player-vs-ai .combined-scoreboard-left { width: 90%; }
    .player-vs-ai .ai-character-container { margin-top: 1rem; }
    .player-vs-ai .answerPanel { grid-template-columns: 1fr; gap: 0.5em; } /* Force single column */
    .player-vs-ai .question-section h1 { font-size: calc(var(--font-size-lg) * 0.95); }
    .dialogGameRulesContainer { width: 95%; } /* Dialog width adjustment */
}

@media (max-width: 480px) {
    .player-vs-ai .combined-scoreboard-left { padding: 0.5rem 0.75rem; }
    .player-vs-ai .scoreboard-line span { font-size: 0.9rem; }
    .player-vs-ai .scoreboard-line .score { font-size: 1rem; }
    .player-vs-ai .answer-indicator { font-size: 0.8rem; padding: 0.1rem 0.3rem; }
    .player-vs-ai .robot-image { width: 100px; height: 100px; }
    .player-vs-ai .ai-speech-bubble, .player-vs-ai .ai-thinking-bubble { max-width: 140px; font-size: 0.8rem; padding: 8px 10px; right: 0; }
    .player-vs-ai .answerPanel button { font-size: 0.9rem; padding: 0.6rem 0.8rem; min-height: 45px; }
}

